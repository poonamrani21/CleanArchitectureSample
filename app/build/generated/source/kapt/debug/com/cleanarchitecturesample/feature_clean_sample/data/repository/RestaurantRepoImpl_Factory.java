// Generated by Dagger (https://dagger.dev).
package com.cleanarchitecturesample.feature_clean_sample.data.repository;

import com.cleanarchitecturesample.feature_clean_sample.data.api.ApiService;
import com.cleanarchitecturesample.feature_clean_sample.data.database.MyDatabase;
import com.cleanarchitecturesample.feature_clean_sample.presentation.util.NetworkHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RestaurantRepoImpl_Factory implements Factory<RestaurantRepoImpl> {
  private final Provider<ApiService> apiProvider;

  private final Provider<MyDatabase> dbProvider;

  private final Provider<NetworkHelper> networkHelperProvider;

  public RestaurantRepoImpl_Factory(Provider<ApiService> apiProvider,
      Provider<MyDatabase> dbProvider, Provider<NetworkHelper> networkHelperProvider) {
    this.apiProvider = apiProvider;
    this.dbProvider = dbProvider;
    this.networkHelperProvider = networkHelperProvider;
  }

  @Override
  public RestaurantRepoImpl get() {
    return newInstance(apiProvider.get(), dbProvider.get(), networkHelperProvider.get());
  }

  public static RestaurantRepoImpl_Factory create(Provider<ApiService> apiProvider,
      Provider<MyDatabase> dbProvider, Provider<NetworkHelper> networkHelperProvider) {
    return new RestaurantRepoImpl_Factory(apiProvider, dbProvider, networkHelperProvider);
  }

  public static RestaurantRepoImpl newInstance(ApiService api, MyDatabase db,
      NetworkHelper networkHelper) {
    return new RestaurantRepoImpl(api, db, networkHelper);
  }
}
