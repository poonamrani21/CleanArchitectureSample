// Generated by Dagger (https://dagger.dev).
package com.cleanarchitecturesample.feature_clean_sample.presentation.dashboard;

import com.cleanarchitecturesample.feature_clean_sample.domain.repository.RestaurantRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RestaurantViewModel_Factory implements Factory<RestaurantViewModel> {
  private final Provider<RestaurantRepository> repositoryProvider;

  public RestaurantViewModel_Factory(Provider<RestaurantRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public RestaurantViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static RestaurantViewModel_Factory create(
      Provider<RestaurantRepository> repositoryProvider) {
    return new RestaurantViewModel_Factory(repositoryProvider);
  }

  public static RestaurantViewModel newInstance(RestaurantRepository repository) {
    return new RestaurantViewModel(repository);
  }
}
