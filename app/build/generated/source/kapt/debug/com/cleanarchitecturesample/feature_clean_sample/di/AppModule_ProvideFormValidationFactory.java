// Generated by Dagger (https://dagger.dev).
package com.cleanarchitecturesample.feature_clean_sample.di;

import com.cleanarchitecturesample.feature_clean_sample.presentation.util.FormValidation;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideFormValidationFactory implements Factory<FormValidation> {
  @Override
  public FormValidation get() {
    return provideFormValidation();
  }

  public static AppModule_ProvideFormValidationFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static FormValidation provideFormValidation() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideFormValidation());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideFormValidationFactory INSTANCE = new AppModule_ProvideFormValidationFactory();
  }
}
