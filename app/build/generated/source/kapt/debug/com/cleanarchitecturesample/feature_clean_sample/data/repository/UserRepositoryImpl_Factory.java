// Generated by Dagger (https://dagger.dev).
package com.cleanarchitecturesample.feature_clean_sample.data.repository;

import com.cleanarchitecturesample.feature_clean_sample.data.database.MyDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserRepositoryImpl_Factory implements Factory<UserRepositoryImpl> {
  private final Provider<MyDatabase> dbProvider;

  public UserRepositoryImpl_Factory(Provider<MyDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public UserRepositoryImpl get() {
    return newInstance(dbProvider.get());
  }

  public static UserRepositoryImpl_Factory create(Provider<MyDatabase> dbProvider) {
    return new UserRepositoryImpl_Factory(dbProvider);
  }

  public static UserRepositoryImpl newInstance(MyDatabase db) {
    return new UserRepositoryImpl(db);
  }
}
